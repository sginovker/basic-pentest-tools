import argparse
from socket import *
from typing import List


# attempt a connection to targetHost on targetPort
def connectionScan(targetHost: str, targetPort: int) -> None:
    try:
        connSocket = socket(AF_INET, SOCK_STREAM)
        connSocket.connect((targetHost, targetPort))
        # connection succeeded
        print("[+]%d/tcp open"% targetPort)
        connSocket.close()
    except:
        # connection failed
        print("[-]%d/tcp closed"% targetPort)


# attempt to scan all targetPorts on targetHost
def portScan(targetHost: str, targetPorts: List[int]) -> None:
    try:
        targetIP = gethostbyname(targetHost)
    except:
        # cannot get IP
        print("[-] Cannot resolve %s"% targetHost)
        return

    try:
        targetName = gethostbyaddr(targetIP)
        # got name successfully
        print("\n[+] Scan result of: %s"% targetName[0])
    except:
        # cannot get name
        print("[-] Scan result of: %s"% targetIP)
    
    setdefaulttimeout(1)
    for targetPort in targetPorts:
        print("Scanning port: %d"% targetPort)
        connectionScan(targetHost, targetPort)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Given a host and list of ports, scans all ports for the target host."
    )
    parser.add_argument("targetHost", help="the target host")
    parser.add_argument("targetPorts", type=int, nargs="+",
                    help="ports to scan (separated by space)")

    args = parser.parse_args()

    portScan(args.targetHost, args.targetPorts)